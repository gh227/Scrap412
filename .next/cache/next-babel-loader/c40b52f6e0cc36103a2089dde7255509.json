{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\hero\\\\Documents\\\\documents\\\\projects\\\\Next\\\\pages\\\\posts\\\\[_update].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from '../../components/Head';\nimport React, { useState, useEffect } from 'react';\nimport { useCurrentUser } from '../../lib/hooks';\nimport Router from 'next/router';\nimport middleware from '../../middlewares/middleware';\nimport { getSingleUpdated } from '../../lib/db';\nexport async function getServerSideProps(context) {\n  await middleware.apply(context.req, context.res);\n  const single = await getSingleUpdated(context.req, context.params._update, '_id');\n  if (!single) context.res.statusCode = 404;\n  return {\n    props: {\n      single\n    }\n  };\n}\n\nconst Update = props => {\n  console.log(props, \" getting it here\");\n  const {\n    single\n  } = props.single; //const [user] = useCurrentUser();\n\n  const {\n    0: errMsg,\n    1: setErrMsg\n  } = useState('');\n  const {\n    0: auth,\n    1: setAuth\n  } = useState(false);\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState({\n    phoneNumber: single.phoneNumber,\n    code: single.code\n  });\n  useEffect(() => {});\n\n  const handleInput = e => {\n    const value = e.target.value;\n    setInputValue(_objectSpread({}, inputValue, {\n      [e.target.name]: value\n    }));\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const body = {\n      phoneNumber: e.currentTarget.phoneNumber.value,\n      code: e.currentTarget.code.value,\n      date: new Date()\n    };\n\n    try {\n      const res = await fetch(`/api/posts`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (res.status == 200 || res.status == 201) {\n        setErrMsg(\"updated successfully\");\n      }\n    } catch (err) {\n      setErrMsg(\"An error occured, pls check your internet connection and try again\");\n    }\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    id: \"main-content\",\n    className: \"animate-bottom container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    style: {\n      padding: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, \"Enter code to continue\"), errMsg && __jsx(\"div\", {\n    className: \"alert alert-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, errMsg)), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"phoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Image link\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"phoneNumber\",\n    name: \"phoneNumber\",\n    value: inputValue.phoneNumber,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"code :\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"code\",\n    name: \"code\",\n    value: inputValue.code,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Submit\"))));\n};\n\nexport default Update;","map":{"version":3,"sources":["c:/Users/hero/Documents/documents/projects/Next/pages/posts/[_update].js"],"names":["Head","React","useState","useEffect","useCurrentUser","Router","middleware","getSingleUpdated","getServerSideProps","context","apply","req","res","single","params","_update","statusCode","props","Update","console","log","errMsg","setErrMsg","auth","setAuth","inputValue","setInputValue","phoneNumber","code","handleInput","e","value","target","name","handleSubmit","preventDefault","body","currentTarget","date","Date","fetch","method","headers","JSON","stringify","status","err","padding"],"mappings":"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","sourcesContent":["import Head from '../../components/Head'\nimport React, {useState, useEffect} from 'react'\nimport { useCurrentUser } from '../../lib/hooks';\nimport Router from 'next/router'\nimport middleware from '../../middlewares/middleware'\nimport {getSingleUpdated} from '../../lib/db'\n\n\nexport async function getServerSideProps(context) {\n    await middleware.apply(context.req, context.res);\n   const single = await getSingleUpdated(context.req, context.params._update, '_id');\n    if (!single) context.res.statusCode = 404;\n    return {props:{single}}\n  }\n\n\nconst Update=(props)=>{\nconsole.log(props, \" getting it here\")\n    const {single} =  props.single;\n  //const [user] = useCurrentUser();\n  const [errMsg, setErrMsg] = useState('')\n  const [auth, setAuth] = useState(false)\n  const [inputValue, setInputValue] = useState({\n    phoneNumber:single.phoneNumber,\n    code:single.code, \n})\n\n  useEffect(()=>{\n  \n  })\n\n  const handleInput = (e)=>{\n    const value = e.target.value;\n    setInputValue({...inputValue, [e.target.name]:value})\n}\n\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const body = {\n      phoneNumber: e.currentTarget.phoneNumber.value,\n      code: e.currentTarget.code.value,\n      date: new Date()\n    };\n   try{\n     const res = await fetch(`/api/posts`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body),\n    });\n    if(res.status==200||res.status==201){setErrMsg(\"updated successfully\")}\n  }\n  catch(err){\n    setErrMsg(\"An error occured, pls check your internet connection and try again\")\n  }\n\n  }\n\n  return(\n\n  <div>\n    <Head/>\n   \n    <div id=\"main-content\" className=\"animate-bottom container\"  >\n    <h2 style={{padding: '20px 0'}}>Enter code to continue</h2>\n  \n    {errMsg && <div className=\"alert alert-success\">\n    <strong>{errMsg}</strong>\n    </div>\n  }\n    <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n    \n  \n      <div className=\"form-group\">\n        <label htmlFor=\"phoneNumber\">Image link</label>\n        <input type=\"text\" className=\"form-control\" id=\"phoneNumber\" name=\"phoneNumber\" value={inputValue.phoneNumber} onChange={handleInput}/>\n      </div>\n  \n      <div className=\"form-group\">\n        <label htmlFor=\"code\">code :</label>\n        <input type=\"text\" className=\"form-control\" id=\"code\" name=\"code\" value={inputValue.code} onChange={handleInput}/>\n      </div>\n  \n     \n      <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n  \n    </form>\n  </div>\n  \n      \n\n  </div>\n   ) \n    \n}\n\nexport default Update;\n"]},"metadata":{},"sourceType":"module"}