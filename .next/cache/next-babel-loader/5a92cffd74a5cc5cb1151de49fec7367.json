{"ast":null,"code":"import { extractUser } from '../../lib/api-helper';\nimport nextConnect from 'next-connect';\nimport middleware from '../../middlewares/middleware';\nimport cors from 'cors';\nimport initMiddleware from '../../lib/initMiddleware';\nconst handler = nextConnect();\nvar whitelist = ['http://example1.com'];\nvar corsOptions = {\n  origin: function (origin, callback) {\n    if (whitelist.indexOf(origin) !== -1) {\n      callback(null, true);\n    } else {\n      callback(new Error('Not allowed by CORS'));\n    }\n  }\n};\nhandler.use(middleware);\nhandler.get('/api/users/', cor(corsOptions), async (req, res) => res.send(\"welcome\"));\nexport default handler;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/pages/api/users.js"],"names":["extractUser","nextConnect","middleware","cors","initMiddleware","handler","whitelist","corsOptions","origin","callback","indexOf","Error","use","get","cor","req","res","send"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,sBAA1B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,MAAMC,OAAO,GAAGJ,WAAW,EAA3B;AACA,IAAIK,SAAS,GAAG,CAAC,qBAAD,CAAhB;AACA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE,UAAUA,MAAV,EAAkBC,QAAlB,EAA4B;AAClC,QAAIH,SAAS,CAACI,OAAV,CAAkBF,MAAlB,MAA8B,CAAC,CAAnC,EAAsC;AACpCC,MAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,qBAAV,CAAD,CAAR;AACD;AACF;AAPe,CAAlB;AAUAN,OAAO,CAACO,GAAR,CAAYV,UAAZ;AAGAG,OAAO,CAACQ,GAAR,CAAY,aAAZ,EAA2BC,GAAG,CAACP,WAAD,CAA9B,EAA6C,OAAMQ,GAAN,EAAWC,GAAX,KAAiBA,GAAG,CAACC,IAAJ,CAAS,SAAT,CAA9D;AAGA,eAAeZ,OAAf","sourcesContent":["import {extractUser} from '../../lib/api-helper'\r\nimport nextConnect from 'next-connect'\r\nimport middleware from '../../middlewares/middleware'\r\nimport cors from 'cors'\r\nimport initMiddleware from '../../lib/initMiddleware'\r\n\r\nconst handler = nextConnect()\r\nvar whitelist = ['http://example1.com']\r\nvar corsOptions = {\r\n  origin: function (origin, callback) {\r\n    if (whitelist.indexOf(origin) !== -1) {\r\n      callback(null, true)\r\n    } else {\r\n      callback(new Error('Not allowed by CORS'))\r\n    }\r\n  }\r\n}\r\n\r\nhandler.use(middleware);\r\n\r\n\r\nhandler.get('/api/users/', cor(corsOptions), async(req, res)=>res.send(\"welcome\"));\r\n\r\n\r\nexport default handler\r\n"]},"metadata":{},"sourceType":"module"}