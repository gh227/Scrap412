{"ast":null,"code":"import nextConnect from 'next-connect';\nimport { nanoid } from 'nanoid';\nimport middleware from '../../../middlewares/middleware';\nimport cors from 'cors';\nconst handler = nextConnect();\nhandler.use(cors({\n  methods: 'POST'\n})).use(middleware);\nconsole.log('hit posts');\nhandler.get(async (req, res) => {\n  const urlArr = req.url.split('/');\n  const phone = urlArr[urlArr.length - 1];\n  const posts = await req.db.collection('posts').findOne({\n    phoneNumber: phone\n  }, {\n    projection: {\n      _id: 0,\n      phoneNumber: 1,\n      code: 1\n    }\n  }); //.toArray();\n\n  console.log(posts); //console.log(req.headers)\n\n  res.send({\n    posts\n  });\n}); //.sort({createdAt:-1})\n\nexport default handler;","map":{"version":3,"sources":["c:/Users/hero/Documents/documents/projects/Next/pages/api/posts/[phone].js"],"names":["nextConnect","nanoid","middleware","cors","handler","use","methods","console","log","get","req","res","urlArr","url","split","phone","length","posts","db","collection","findOne","phoneNumber","projection","_id","code","send"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAMC,OAAO,GAAGJ,WAAW,EAA3B;AAMAI,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC;AAACG,EAAAA,OAAO,EAAC;AAAT,CAAD,CAAhB,EAAoCD,GAApC,CAAwCH,UAAxC;AACAK,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAJ,OAAO,CAACK,GAAR,CAAY,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChC,QAAMC,MAAM,GAAGF,GAAG,CAACG,GAAJ,CAAQC,KAAR,CAAc,GAAd,CAAf;AACA,QAAMC,KAAK,GAAGH,MAAM,CAACA,MAAM,CAACI,MAAP,GAAc,CAAf,CAApB;AAEE,QAAMC,KAAK,GAAG,MAAMP,GAAG,CAACQ,EAAJ,CACjBC,UADiB,CACN,OADM,EAEjBC,OAFiB,CAET;AAACC,IAAAA,WAAW,EAACN;AAAb,GAFS,EAEY;AAAEO,IAAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUF,MAAAA,WAAW,EAAE,CAAvB;AAA0BG,MAAAA,IAAI,EAAE;AAAhC;AAAd,GAFZ,CAApB,CAJ8B,CAO5B;;AACAjB,EAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ,EAR4B,CAS5B;;AACFN,EAAAA,GAAG,CAACc,IAAJ,CAAS;AAACR,IAAAA;AAAD,GAAT;AACD,CAXD,E,CAYA;;AAEA,eAAeb,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport { nanoid } from 'nanoid';\r\nimport middleware from '../../../middlewares/middleware';\r\nimport cors from 'cors'\r\n\r\nconst handler = nextConnect();\r\n\r\n\r\n\r\n\r\n\r\nhandler.use(cors({methods:'POST'})).use(middleware);\r\nconsole.log('hit posts')\r\nhandler.get(async (req, res) => {\r\nconst urlArr = req.url.split('/');\r\nconst phone = urlArr[urlArr.length-1]\r\n\r\n  const posts = await req.db\r\n    .collection('posts')\r\n    .findOne({phoneNumber:phone}, { projection: { _id: 0, phoneNumber: 1, code: 1 } })\r\n    //.toArray();\r\n    console.log(posts);\r\n    //console.log(req.headers)\r\n  res.send({posts})\r\n});\r\n//.sort({createdAt:-1})\r\n    \r\nexport default handler;"]},"metadata":{},"sourceType":"module"}