{"ast":null,"code":"import nextConnect from 'next-connect';\nimport { nanoid } from 'nanoid';\nimport middleware from '../../../middlewares/middleware';\nconst handler = nextConnect();\nhandler.use(middleware);\nhandler.get(async (req, res) => {\n  function getRndInteger(min, max) {\n    return String.fromCharCode(Math.floor(Math.random() * (max - min + 1)) + min, Math.floor(Math.random() * (max - min + 1)) + min, Math.floor(Math.random() * (max - min + 1)) + min, Math.floor(Math.random() * (max - min + 1)) + min, Math.floor(Math.random() * (max - min + 1)) + min);\n  }\n\n  const posts = await req.db.collection('posts').find({}).sort({\n    createdAt: -1\n  }).toArray();\n  req.db.collection('posts').updataMany({\n    caption: /./\n  }, {\n    $set: {\n      caption: `BOKO HARAM: UN, Amnesty International, others react to killing of aid workers ${getRndInteger(97, 122)}`\n    }\n  }, (err, res) => {\n    if (err) throw err;\n    console.log(res.result.nModified + \"documents updated\");\n  });\n  res.send({\n    posts\n  });\n});\nhandler.post(async (req, res) => {\n  if (!req.user) {\n    return res.status(401).send('unauthenticated');\n  }\n\n  const {\n    image_link,\n    caption,\n    author,\n    source,\n    source_link,\n    category,\n    headings,\n    abstract_cat,\n    content\n  } = req.body;\n  if (!content) return res.status(400).send('You must write something');\n  const post = {\n    _id: nanoid(),\n    image_link,\n    caption,\n    author,\n    source,\n    source_link,\n    category,\n    headings,\n    abstract_cat,\n    content,\n    createdAt: new Date(),\n    creatorId: req.user._id\n  };\n  await req.db.collection('posts').insertOne(post);\n  return res.send(post);\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/pages/api/posts/index.js"],"names":["nextConnect","nanoid","middleware","handler","use","get","req","res","getRndInteger","min","max","String","fromCharCode","Math","floor","random","posts","db","collection","find","sort","createdAt","toArray","updataMany","caption","$set","err","console","log","result","nModified","send","post","user","status","image_link","author","source","source_link","category","headings","abstract_cat","content","body","_id","Date","creatorId","insertOne"],"mappings":"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","sourcesContent":["import nextConnect from 'next-connect';\r\nimport { nanoid } from 'nanoid';\r\nimport middleware from '../../../middlewares/middleware';\r\n\r\nconst handler = nextConnect();\r\n\r\nhandler.use(middleware);\r\n\r\nhandler.get(async (req, res) => {\r\n  function getRndInteger(min, max) {\r\n    return String.fromCharCode(Math.floor(Math.random() * (max - min + 1) ) + min , Math.floor(Math.random() * (max - min + 1) ) + min , Math.floor(Math.random() * (max - min + 1) ) + min , Math.floor(Math.random() * (max - min + 1) ) + min , Math.floor(Math.random() * (max - min + 1) ) + min );\r\n  }\r\n  \r\n  const posts = await req.db\r\n    .collection('posts')\r\n    .find({})\r\n    .sort({createdAt:-1})\r\n    .toArray();\r\n  req.db.collection('posts').updataMany({caption:/./}, {$set:{caption:`BOKO HARAM: UN, Amnesty International, others react to killing of aid workers ${getRndInteger(97, 122)}` }},\r\n  (err,res)=>{if(err) throw err; console.log(res.result.nModified + \"documents updated\")})\r\n  res.send({posts})\r\n});\r\n\r\nhandler.post(async (req, res) => {\r\n  if (!req.user) {\r\n    return res.status(401).send('unauthenticated');\r\n  }\r\n\r\n  const { image_link, caption, author, source, source_link, \r\n    category, headings, abstract_cat, content} = req.body;\r\n\r\n  if (!content) return res.status(400).send('You must write something');\r\n\r\n  const post = {\r\n    _id: nanoid(),\r\n    image_link, \r\n    caption, \r\n    author, \r\n    source, \r\n    source_link, \r\n    category, \r\n    headings, \r\n    abstract_cat, \r\n    content,\r\n    createdAt: new Date(),\r\n    creatorId: req.user._id,\r\n  };\r\n\r\n  await req.db.collection('posts').insertOne(post);\r\n  return res.send(post);\r\n});\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}