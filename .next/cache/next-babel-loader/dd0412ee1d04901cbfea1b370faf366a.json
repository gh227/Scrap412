{"ast":null,"code":"import nextConnect from 'next-connect';\nimport { nanoid } from 'nanoid';\nimport middleware from '../../../middlewares/middleware';\nconst handler = nextConnect();\nhandler.use(middleware);\nhandler.get((req, res) => {\n  res.send('e dey work ooo');\n});\nhandler.post(async (req, res) => {\n  if (!req.user) {\n    return res.status(401).send('unauthenticated');\n  }\n\n  const {\n    post_id,\n    comment\n  } = req.body;\n  if (!comment) return res.status(400).send('You must write something');\n  const comments = {\n    _id: nanoid(),\n    post_id,\n    comment,\n    createdAt: new Date(),\n    creatorId: req.user._id\n  };\n  await req.db.collection('comments').insertOne(comments);\n  return res.send(comment);\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/pages/api/comments/index.js"],"names":["nextConnect","nanoid","middleware","handler","use","get","req","res","send","post","user","status","post_id","comment","body","comments","_id","createdAt","Date","creatorId","db","collection","insertOne"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,MAAMC,OAAO,GAAGH,WAAW,EAA3B;AAEAG,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAC,OAAO,CAACE,GAAR,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAY;AACpBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,gBAAT;AACH,CAFD;AAGAL,OAAO,CAACM,IAAR,CAAa,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAI,CAACD,GAAG,CAACI,IAAT,EAAe;AACb,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,iBAArB,CAAP;AACD;;AACD,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBP,GAAG,CAACQ,IAAhC;AAEA,MAAI,CAACD,OAAL,EAAc,OAAON,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,0BAArB,CAAP;AAEd,QAAMO,QAAQ,GAAG;AACfC,IAAAA,GAAG,EAAEf,MAAM,EADI;AAEfW,IAAAA,OAFe;AAGfC,IAAAA,OAHe;AAIfI,IAAAA,SAAS,EAAE,IAAIC,IAAJ,EAJI;AAKfC,IAAAA,SAAS,EAAEb,GAAG,CAACI,IAAJ,CAASM;AALL,GAAjB;AAQA,QAAMV,GAAG,CAACc,EAAJ,CAAOC,UAAP,CAAkB,UAAlB,EAA8BC,SAA9B,CAAwCP,QAAxC,CAAN;AACA,SAAOR,GAAG,CAACC,IAAJ,CAASK,OAAT,CAAP;AACD,CAlBD;AAoBA,eAAeV,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport { nanoid } from 'nanoid';\r\nimport middleware from '../../../middlewares/middleware';\r\n\r\nconst handler = nextConnect();\r\n\r\nhandler.use(middleware);\r\nhandler.get((req, res)=>{\r\n    res.send('e dey work ooo')\r\n})\r\nhandler.post(async (req, res) => {\r\n  if (!req.user) {\r\n    return res.status(401).send('unauthenticated');\r\n  }\r\n  const { post_id, comment} = req.body;\r\n\r\n  if (!comment) return res.status(400).send('You must write something');\r\n\r\n  const comments = {\r\n    _id: nanoid(),\r\n    post_id,\r\n    comment,\r\n    createdAt: new Date(),\r\n    creatorId: req.user._id,\r\n  };\r\n\r\n  await req.db.collection('comments').insertOne(comments);\r\n  return res.send(comment);\r\n});\r\n\r\nexport default handler;\r\n\r\n"]},"metadata":{},"sourceType":"module"}