{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hero\\\\Documents\\\\projects\\\\Next\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from '../components/head';\nimport Nav from '../components/nav';\nimport fetch from 'node-fetch';\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r;\n  });\n};\n\nfunction Index(props) {\n  var initialData = props.data;\n\n  var _useSWR = useSWR(\"\".concat(process.env.HOST / api / posts), fetcher, {\n    initialData: initialData\n  }),\n      data = _useSWR.data;\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }, data);\n}\n/*const Index= () => {\r\n    return(\r\n    <div>\r\n        <Head/>\r\n        <Nav/>\r\n    </div>\r\n    )\r\n}*/\n\n\nexport var __N_SSP = true;\nexport default Index;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/pages/index.js"],"names":["Head","Nav","fetch","fetcher","url","then","r","Index","props","initialData","data","useSWR","process","env","HOST","api","posts"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAGA,IAAMC,OAAO,GAAE,SAATA,OAAS,CAACC,GAAD,EAAO;AAAC,SAAOF,KAAK,CAACE,GAAD,CAAL,CAAWC,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAAjB,CAAP;AAA+B,CAAtD;;AAMA,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AACnB,MAAMC,WAAW,GAAGD,KAAK,CAACE,IAA1B;;AADmB,gBAEFC,MAAM,WAAIC,OAAO,CAACC,GAAR,CAAYC,IAAZ,GAAiBC,GAAjB,GAAqBC,KAAzB,GAAkCb,OAAlC,EAA2C;AAAEM,IAAAA,WAAW,EAAXA;AAAF,GAA3C,CAFJ;AAAA,MAEXC,IAFW,WAEXA,IAFW;;AAGnB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,CAAP;AACD;AAEH;;;;;;;;;;;AAQA,eAAeH,KAAf","sourcesContent":["import Head from '../components/head'\r\nimport Nav from '../components/nav'\r\nimport fetch from 'node-fetch'\r\n\r\n\r\nconst fetcher =(url)=>{return fetch(url).then(r => r)}\r\nexport async function getServerSideProps() {\r\n    const data = await fetcher(`${process.env.HOST/api/posts}`)\r\n    return { props: { data } }\r\n  }\r\n  \r\nfunction Index (props) {\r\n    const initialData = props.data\r\n    const { data } = useSWR(`${process.env.HOST/api/posts}`, fetcher, { initialData })\r\n    return <div>{data}</div>\r\n  }\r\n\r\n/*const Index= () => {\r\n    return(\r\n    <div>\r\n        <Head/>\r\n        <Nav/>\r\n    </div>\r\n    )\r\n}*/\r\nexport default Index"]},"metadata":{},"sourceType":"module"}