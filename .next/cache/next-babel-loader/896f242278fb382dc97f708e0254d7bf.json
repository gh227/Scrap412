{"ast":null,"code":"export const categoryReturn = (data, category, num, type) => {\n  if (data instanceof Array) {\n    return data.reduce((acc, post) => {\n      if (acc.length === num) return acc;\n      if (post[type] === category) acc.push(post);\n      return acc;\n    }, []);\n  } else {\n    return [];\n  }\n};\nexport const filterCat = (data, obj) => {\n  if (!(data instanceof Array)) return [];\n  const {\n    category,\n    headings,\n    abstract_cat\n  } = obj;\n  return data.filter(value => value['category'] === category && value['headings'] === headings && value['abstract_cat'] === abstract_cat);\n};\nexport function spliter(arr, num) {\n  let newArr = [];\n  let start = 0;\n  let end = num;\n  let reminder = arr.length % num;\n  let length;\n\n  if (reminder > 0) {\n    length = (arr.length - reminder) / num + 1;\n  } else {\n    length = (arr.length - reminder) / num;\n  }\n\n  for (let i = 0; i < length; i++) {\n    if (i == length - 1 && reminder > 0) {\n      newArr[i] = arr.slice(end);\n    }\n\n    newArr[i] = arr.slice(start, end);\n    start += num;\n    end += num;\n  }\n\n  return newArr;\n} //filterCat(data, category, 'headings', 'abstract_cat', query, 'not', '')","map":{"version":3,"sources":["c:/Users/hero/Documents/projects/Next/lib/posts.js"],"names":["categoryReturn","data","category","num","type","Array","reduce","acc","post","length","push","filterCat","obj","headings","abstract_cat","filter","value","spliter","arr","newArr","start","end","reminder","i","slice"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAE,CAACC,IAAD,EAAOC,QAAP,EAAiBC,GAAjB,EAAsBC,IAAtB,KAA6B;AACtD,MAAGH,IAAI,YAAYI,KAAnB,EAAyB;AACrB,WAAOJ,IAAI,CAACK,MAAL,CAAY,CAACC,GAAD,EAAMC,IAAN,KAAa;AAC5B,UAAGD,GAAG,CAACE,MAAJ,KAAeN,GAAlB,EAAuB,OAAOI,GAAP;AACvB,UAAGC,IAAI,CAACJ,IAAD,CAAJ,KAAeF,QAAlB,EAA4BK,GAAG,CAACG,IAAJ,CAASF,IAAT;AAC5B,aAAOD,GAAP;AACP,KAJU,EAIT,EAJS,CAAP;AAKH,GAND,MAOI;AAAC,WAAO,EAAP;AAAU;AAEjB,CAVK;AAYN,OAAO,MAAMI,SAAS,GAAE,CAACV,IAAD,EAAMW,GAAN,KAAY;AAChC,MAAG,EAAEX,IAAI,YAAYI,KAAlB,CAAH,EAA6B,OAAO,EAAP;AAC7B,QAAM;AAACH,IAAAA,QAAD;AAAUW,IAAAA,QAAV;AAAmBC,IAAAA;AAAnB,MAAkCF,GAAxC;AACA,SAAOX,IAAI,CAACc,MAAL,CAAYC,KAAK,IACrBA,KAAK,CAAC,UAAD,CAAL,KAAsBd,QAAtB,IAAkCc,KAAK,CAAC,UAAD,CAAL,KAAqBH,QAAvD,IAAmEG,KAAK,CAAC,cAAD,CAAL,KAAyBF,YADxF,CAAP;AAGH,CANM;AAQP,OAAO,SAASG,OAAT,CAAiBC,GAAjB,EAAqBf,GAArB,EAAyB;AAC/B,MAAIgB,MAAM,GAAE,EAAZ;AACA,MAAIC,KAAK,GAAC,CAAV;AACA,MAAIC,GAAG,GAAGlB,GAAV;AACA,MAAKmB,QAAQ,GAAEJ,GAAG,CAACT,MAAJ,GAAWN,GAA1B;AACA,MAAIM,MAAJ;;AACD,MAAGa,QAAQ,GAAE,CAAb,EAAe;AACdb,IAAAA,MAAM,GAAG,CAACS,GAAG,CAACT,MAAJ,GAAWa,QAAZ,IAAsBnB,GAAtB,GAA0B,CAAnC;AAAsC,GADvC,MAC2C;AAC1CM,IAAAA,MAAM,GAAG,CAACS,GAAG,CAACT,MAAJ,GAAWa,QAAZ,IAAsBnB,GAA/B;AACA;;AACD,OAAI,IAAIoB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACd,MAAd,EAAsBc,CAAC,EAAvB,EAA0B;AACzB,QAAGA,CAAC,IAAEd,MAAM,GAAC,CAAV,IAAca,QAAQ,GAAE,CAA3B,EAA6B;AAC5BH,MAAAA,MAAM,CAACI,CAAD,CAAN,GAAYL,GAAG,CAACM,KAAJ,CAAUH,GAAV,CAAZ;AACA;;AACDF,IAAAA,MAAM,CAACI,CAAD,CAAN,GAAWL,GAAG,CAACM,KAAJ,CAAUJ,KAAV,EAAgBC,GAAhB,CAAX;AACAD,IAAAA,KAAK,IAAEjB,GAAP;AACAkB,IAAAA,GAAG,IAAGlB,GAAN;AACA;;AACF,SAAOgB,MAAP;AACC,C,CAQA","sourcesContent":["export const categoryReturn =(data, category, num, type)=>{\n    if(data instanceof Array){\n        return data.reduce((acc, post)=>{\n            if(acc.length === num) return acc;\n            if(post[type] === category) acc.push(post);\n            return acc;\n    },[])  \n    }\n    else{return []}\n   \n }\n\n export const filterCat =(data,obj)=>{\n     if(!(data instanceof Array)) return [];\n     const {category,headings,abstract_cat} =obj\n     return data.filter(value=>\n        value['category'] === category && value['headings'] ===headings && value['abstract_cat']=== abstract_cat   \n     )\n }\n\n export function spliter(arr,num){\n  let newArr =[];\n  let start=0;\n  let end = num;\n  let \treminder =arr.length%num;\n  let length;\n\tif(reminder >0){\n\t length = (arr.length-reminder)/num+1;}else{\n\t\tlength = (arr.length-reminder)/num;\n\t}\n\tfor(let i=0;i<length; i++){\n\t\tif(i==length-1&& reminder >0){\n\t\t\tnewArr[i]  =arr.slice(end);\n\t\t}\n\t\tnewArr[i]= arr.slice(start,end);\n\t\tstart+=num;\n\t\tend +=num;\n\t}\nreturn newArr;\n}\n\n\n\n\n\n\n\n //filterCat(data, category, 'headings', 'abstract_cat', query, 'not', '')"]},"metadata":{},"sourceType":"module"}