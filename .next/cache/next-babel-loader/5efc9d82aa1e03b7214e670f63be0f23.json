{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport mongoose from 'mongoose';\nimport nc from 'next-connect';\nvar client = MongoClient('mongodb://127.0.0.1:27017/loveQuestion', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n});\n\nvar connectDB = function connectDB() {\n  return _regeneratorRuntime.async(function connectDB$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            mongoose.connect(db, {\n              useNewUrlParser: true,\n              useUnifiedTopology: true,\n              useCreateIndex: true,\n              useFindAndModify: false\n            });\n            console.log('connection successful');\n          } catch (err) {\n            console.error(err.message);\n            process.exit(1);\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default connectDB;\n/*\r\n  async function database(req, res, next) {\r\n    if (!client.isConnected()) await client.connect();\r\n    return next();\r\n  }\r\n  \r\nconst middleware = nextConnect();\r\n  \r\n  middleware.use(database);\r\nexport default middleware;\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/middleware/db.js"],"names":["mongoose","nc","client","MongoClient","useNewUrlParser","useUnifiedTopology","useCreateIndex","useFindAndModify","connectDB","connect","db","console","log","err","error","message","process","exit"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,EAAP,MAAe,cAAf;AAGA,IAAMC,MAAM,GAAIC,WAAW,CAAC,wCAAD,EAA0C;AACjEC,EAAAA,eAAe,EAAE,IADgD;AAEjEC,EAAAA,kBAAkB,EAAE,IAF6C;AAGjEC,EAAAA,cAAc,EAAE,IAHiD;AAIjEC,EAAAA,gBAAgB,EAAE;AAJ+C,CAA1C,CAA3B;;AAOE,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAChB,cAAG;AACCR,YAAAA,QAAQ,CAACS,OAAT,CAAiBC,EAAjB,EACI;AACIN,cAAAA,eAAe,EAAE,IADrB;AAEIC,cAAAA,kBAAkB,EAAE,IAFxB;AAGIC,cAAAA,cAAc,EAAE,IAHpB;AAIIC,cAAAA,gBAAgB,EAAE;AAJtB,aADJ;AAQAI,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,WAVD,CAWA,OAAMC,GAAN,EAAU;AACNF,YAAAA,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACAC,YAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH;;AAfe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAiBA,eAAeT,SAAf;AACF","sourcesContent":["import mongoose from 'mongoose'\r\nimport nc from 'next-connect'\r\n\r\n\r\nconst client =  MongoClient('mongodb://127.0.0.1:27017/loveQuestion',{\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    useCreateIndex: true,\r\n    useFindAndModify: false\r\n  })\r\n\r\n  const connectDB = async ()=>{\r\n    try{\r\n        mongoose.connect(db,\r\n            {\r\n                useNewUrlParser: true,\r\n                useUnifiedTopology: true,\r\n                useCreateIndex: true,\r\n                useFindAndModify: false\r\n              }\r\n        )\r\n        console.log('connection successful')\r\n    }\r\n    catch(err){\r\n        console.error(err.message);\r\n        process.exit(1);\r\n    }\r\n  }\r\n  export default connectDB;\r\n/*\r\n  async function database(req, res, next) {\r\n    if (!client.isConnected()) await client.connect();\r\n    return next();\r\n  }\r\n  \r\nconst middleware = nextConnect();\r\n  \r\n  middleware.use(database);\r\nexport default middleware;\r\n\r\n*/\r\n\r\n"]},"metadata":{},"sourceType":"module"}