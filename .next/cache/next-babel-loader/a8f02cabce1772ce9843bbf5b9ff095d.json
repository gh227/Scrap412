{"ast":null,"code":"import nextConnect from 'next-connect';\nimport { nanoid } from 'nanoid';\nimport middleware from '../../../middlewares/middleware';\nconst handler = nextConnect();\nhandler.use(middleware);\nhandler.get(async (req, res) => {\n  const comment = await req.db.collection('comments').find({});\n  res.json({\n    comment\n  });\n});\nhandler.post(async (req, res) => {\n  if (!req.user) {\n    return res.status(401).send('unauthenticated');\n  }\n\n  const {\n    post_id,\n    comment\n  } = req.body;\n  if (!comment) return res.status(400).send('You must write something');\n  const comments = {\n    _id: nanoid(),\n    post_id,\n    comment,\n    createdAt: new Date(),\n    creatorId: req.user._id\n  };\n  await req.db.collection('comments').insertOne(comments);\n  return res.status(201).json(comments);\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/pages/api/comments/index.js"],"names":["nextConnect","nanoid","middleware","handler","use","get","req","res","comment","db","collection","find","json","post","user","status","send","post_id","body","comments","_id","createdAt","Date","creatorId","insertOne"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,MAAMC,OAAO,GAAGH,WAAW,EAA3B;AAEAG,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAC,OAAO,CAACE,GAAR,CAAY,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC5B,QAAMC,OAAO,GAAG,MAAMF,GAAG,CAACG,EAAJ,CAAOC,UAAP,CAAkB,UAAlB,EAA8BC,IAA9B,CAAmC,EAAnC,CAAtB;AACCJ,EAAAA,GAAG,CAACK,IAAJ,CAAS;AAACJ,IAAAA;AAAD,GAAT;AACJ,CAHD;AAKAL,OAAO,CAACU,IAAR,CAAa,OAAOP,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAI,CAACD,GAAG,CAACQ,IAAT,EAAe;AACb,WAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB,CAAP;AACD;;AACD,QAAM;AAAEC,IAAAA,OAAF;AAAWT,IAAAA;AAAX,MAAsBF,GAAG,CAACY,IAAhC;AAEA,MAAI,CAACV,OAAL,EAAc,OAAOD,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0BAArB,CAAP;AAEd,QAAMG,QAAQ,GAAG;AACfC,IAAAA,GAAG,EAAEnB,MAAM,EADI;AAEfgB,IAAAA,OAFe;AAGfT,IAAAA,OAHe;AAIfa,IAAAA,SAAS,EAAE,IAAIC,IAAJ,EAJI;AAKfC,IAAAA,SAAS,EAAEjB,GAAG,CAACQ,IAAJ,CAASM;AALL,GAAjB;AAQA,QAAMd,GAAG,CAACG,EAAJ,CAAOC,UAAP,CAAkB,UAAlB,EAA8Bc,SAA9B,CAAwCL,QAAxC,CAAN;AACA,SAAOZ,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBO,QAArB,CAAP;AACD,CAlBD;AAoBA,eAAehB,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport { nanoid } from 'nanoid';\r\nimport middleware from '../../../middlewares/middleware';\r\n\r\nconst handler = nextConnect();\r\n\r\nhandler.use(middleware);\r\nhandler.get(async (req, res) => {\r\n    const comment = await req.db.collection('comments').find({})\r\n     res.json({comment})\r\n});\r\n\r\nhandler.post(async (req, res) => {\r\n  if (!req.user) {\r\n    return res.status(401).send('unauthenticated');\r\n  }\r\n  const { post_id, comment} = req.body;\r\n\r\n  if (!comment) return res.status(400).send('You must write something');\r\n\r\n  const comments = {\r\n    _id: nanoid(),\r\n    post_id,\r\n    comment,\r\n    createdAt: new Date(),\r\n    creatorId: req.user._id,\r\n  };\r\n\r\n  await req.db.collection('comments').insertOne(comments);\r\n  return res.status(201).json(comments);\r\n});\r\n\r\nexport default handler;\r\n\r\n"]},"metadata":{},"sourceType":"module"}