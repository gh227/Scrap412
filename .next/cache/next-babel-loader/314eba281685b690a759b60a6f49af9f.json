{"ast":null,"code":"import nextConnect from 'next-connect';\nimport { nanoid } from 'nanoid';\nimport middleware from '../../../middlewares/middleware';\nimport cors from 'cors';\nconst handler = nextConnect();\nhandler.use(middleware);\n/*handler.get(async (req, res) => {\n\n  const posts = await req.db\n    .collection('posts')\n    .find({})\n    .sort({createdAt:-1})\n    .toArray();\n\n  res.send({posts})\n});*/\n\nhandler.post(async (req, res) => {\n  if (!req.user) {\n    return res.status(401).send('unauthenticated');\n  }\n\n  const {\n    image_link,\n    caption,\n    author,\n    source,\n    source_link,\n    category,\n    headings,\n    abstract_cat,\n    content\n  } = req.body;\n  if (!content) return res.status(400).send('You must write something');\n  const post = {\n    _id: nanoid(),\n    image_link,\n    caption,\n    author,\n    source,\n    source_link,\n    category,\n    headings,\n    abstract_cat,\n    content,\n    createdAt: new Date(),\n    creatorId: req.user._id\n  };\n  await req.db.collection('posts').insertOne(post);\n  return res.send(post);\n});\nhandler.get(async (req, res) => {\n  console.log(\"dey hit me\");\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/pages/api/posts/index.js"],"names":["nextConnect","nanoid","middleware","cors","handler","use","post","req","res","user","status","send","image_link","caption","author","source","source_link","category","headings","abstract_cat","content","body","_id","createdAt","Date","creatorId","db","collection","insertOne","get","console","log"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAMC,OAAO,GAAGJ,WAAW,EAA3B;AAMAI,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEA;;;;;;;;;;;AAWAE,OAAO,CAACE,IAAR,CAAa,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAE/B,MAAI,CAACD,GAAG,CAACE,IAAT,EAAe;AACb,WAAOD,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB,CAAP;AACD;;AAED,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,MAAvB;AAA+BC,IAAAA,MAA/B;AAAuCC,IAAAA,WAAvC;AACJC,IAAAA,QADI;AACMC,IAAAA,QADN;AACgBC,IAAAA,YADhB;AAC8BC,IAAAA;AAD9B,MACyCb,GAAG,CAACc,IADnD;AAGA,MAAI,CAACD,OAAL,EAAc,OAAOZ,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0BAArB,CAAP;AAEd,QAAML,IAAI,GAAG;AACXgB,IAAAA,GAAG,EAAErB,MAAM,EADA;AAEXW,IAAAA,UAFW;AAGXC,IAAAA,OAHW;AAIXC,IAAAA,MAJW;AAKXC,IAAAA,MALW;AAMXC,IAAAA,WANW;AAOXC,IAAAA,QAPW;AAQXC,IAAAA,QARW;AASXC,IAAAA,YATW;AAUXC,IAAAA,OAVW;AAWXG,IAAAA,SAAS,EAAE,IAAIC,IAAJ,EAXA;AAYXC,IAAAA,SAAS,EAAElB,GAAG,CAACE,IAAJ,CAASa;AAZT,GAAb;AAeA,QAAMf,GAAG,CAACmB,EAAJ,CAAOC,UAAP,CAAkB,OAAlB,EAA2BC,SAA3B,CAAqCtB,IAArC,CAAN;AACA,SAAOE,GAAG,CAACG,IAAJ,CAASL,IAAT,CAAP;AACD,CA5BD;AA8BAF,OAAO,CAACyB,GAAR,CAAY,OAAMtB,GAAN,EAAWC,GAAX,KAAiB;AAC5BsB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,CAFD;AAIA,eAAe3B,OAAf","sourcesContent":["import nextConnect from 'next-connect';\nimport { nanoid } from 'nanoid';\nimport middleware from '../../../middlewares/middleware';\nimport cors from 'cors'\n\nconst handler = nextConnect();\n\n\n\n\n\nhandler.use(middleware);\n\n/*handler.get(async (req, res) => {\n\n  const posts = await req.db\n    .collection('posts')\n    .find({})\n    .sort({createdAt:-1})\n    .toArray();\n\n  res.send({posts})\n});*/\n\nhandler.post(async (req, res) => {\n    \n  if (!req.user) {\n    return res.status(401).send('unauthenticated');\n  }\n\n  const { image_link, caption, author, source, source_link, \n    category, headings, abstract_cat, content} = req.body;\n\n  if (!content) return res.status(400).send('You must write something');\n\n  const post = {\n    _id: nanoid(),\n    image_link, \n    caption, \n    author, \n    source, \n    source_link, \n    category, \n    headings, \n    abstract_cat, \n    content,\n    createdAt: new Date(),\n    creatorId: req.user._id,\n  };\n\n  await req.db.collection('posts').insertOne(post);\n  return res.send(post);\n});\n\nhandler.get(async(req, res)=>{\n console.log(\"dey hit me\")\n})\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}