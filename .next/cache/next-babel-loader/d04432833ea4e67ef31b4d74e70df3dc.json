{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hero\\\\Documents\\\\projects\\\\Next\\\\pages\\\\news\\\\[cat]\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from '../../../components/head';\nimport Nav from '../../../components/nav';\nimport Link from 'next/link';\nimport { categoryReturn, filterCat, spliter } from '../../../lib/posts';\nimport { getPosts } from '../../../lib/db';\nimport middleware from '../../../middlewares/middleware';\nimport CatComponent from '../../../components/Cat';\n\nconst Post = props => {\n  const {\n    post\n  } = props;\n  return __jsx(\"div\", {\n    className: \"col-lg-4 col-md-6 col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"news-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, post.image_link !== null ? __jsx(\"a\", {\n    className: \"news-items\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  })) : __jsx(\"a\", {\n    className: \"news-items\",\n    href: `/news/`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  })), __jsx(Link, {\n    href: \"/news/[cat]/[title]\",\n    as: `/news/${post.category}/${post.caption}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"news-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, post.caption))));\n};\n\nconst Abstract = props => {\n  const {\n    post\n  } = props;\n  return __jsx(\"div\", {\n    className: \"col-md-12 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"news-container news-tablet-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, post.image_link !== null ? __jsx(\"a\", {\n    className: \"news-items\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  })) : __jsx(\"a\", {\n    className: \"news-items\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  })), __jsx(\"a\", {\n    className: \"news-items\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, post.caption)));\n};\n\nexport async function getServerSideProps(context) {\n  await middleware.apply(context.req, context.res);\n  const posts = await getPosts(context.req, context.params.cat);\n  if (!posts) context.res.statusCode = 404;\n  const {\n    posts: data\n  } = posts;\n  const intro = categoryReturn(data, context.params.cat, 1, 'headings')[0];\n  const currentCat = filterCat(data, 'category', 'headings', 'abstract_cat', context.params.cat, 'not', '');\n  return {\n    props: {\n      data,\n      currentCat,\n      intro\n    }\n  };\n}\n\nfunction Cat(props) {\n  const cat = props.currentCat.map(post => __jsx(Post, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 42\n    }\n  }));\n  const latest_news = categoryReturn(props.data, 'latest_news', 5, 'abstract_cat').map(post => __jsx(Abstract, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 95\n    }\n  }));\n  const top_news = categoryReturn(props.data, 'top_stories', 5, 'abstract_cat').map(post => __jsx(Abstract, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 92\n    }\n  }));\n  const catArray = spliter(cat, 12);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 1\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }), __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }\n  }), __jsx(CatComponent, {\n    intro: props.intro,\n    posts: {\n      cat: catArray,\n      latest_news,\n      top_news\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }\n  }));\n}\n\nexport default Cat;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/pages/news/[cat]/index.js"],"names":["Head","Nav","Link","categoryReturn","filterCat","spliter","getPosts","middleware","CatComponent","Post","props","post","image_link","category","caption","Abstract","getServerSideProps","context","apply","req","res","posts","params","cat","statusCode","data","intro","currentCat","Cat","map","_id","latest_news","top_news","catArray"],"mappings":"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","sourcesContent":["import Head from '../../../components/head'\r\nimport Nav from '../../../components/nav'\r\nimport Link from 'next/link'\r\nimport {categoryReturn, filterCat,spliter} from '../../../lib/posts'\r\nimport { getPosts } from '../../../lib/db';\r\nimport middleware from '../../../middlewares/middleware';\r\nimport CatComponent from '../../../components/Cat'\r\n\r\n\r\n\r\nconst Post =(props)=>{\r\n  const {post} = props;\r\n  \r\n  return(                  \r\n      <div className=\"col-lg-4 col-md-6 col-sm-6\">\r\n          <div className=\"news-container\">\r\n              {\r\n              post.image_link !== null ?\r\n              <a className=\"news-items\" href=''>\r\n              <img src={post.image_link} className=\"img-fluid sub-inner-img\" />\r\n              </a>\r\n              :\r\n              <a className=\"news-items\" href={`/news/`}>\r\n              <img src={post.image_link}  className=\"img-fluid sub-inner-img\"/>\r\n              </a>\r\n              }\r\n            <Link href=\"/news/[cat]/[title]\" as={`/news/${post.category}/${post.caption}`}>\r\n                <a className=\"news-items\" >\r\n                  {post.caption}\r\n                </a> \r\n            </Link>\r\n              \r\n          </div>\r\n      </div>\r\n      )\r\n  }\r\n\r\n  const Abstract =(props)=>{\r\n      const {post} = props;\r\n      return(                  \r\n          <div className=\"col-md-12 col-sm-12\">\r\n              <div className=\"news-container news-tablet-container\">\r\n                  {\r\n                  post.image_link !== null ?\r\n                  <a className=\"news-items\" href=''>\r\n                  <img src={post.image_link} className=\"img-fluid sub-inner-img\" />\r\n                  </a>\r\n                  :\r\n                  <a className=\"news-items\" href=''>\r\n                  <img src={post.image_link}  className=\"img-fluid sub-inner-img\"/>\r\n                  </a>\r\n                  }\r\n                <a className=\"news-items\" href=\"\">{post.caption}\r\n                </a>   \r\n              </div>\r\n          </div>\r\n    )\r\n  }\r\n\r\nexport async function getServerSideProps(context) {\r\n  await middleware.apply(context.req, context.res);\r\n const posts = await getPosts(context.req, context.params.cat);\r\n  if (!posts) context.res.statusCode = 404;\r\n  const {posts:data} = posts\r\n  const intro = categoryReturn(data, context.params.cat, 1, 'headings')[0];\r\n  const currentCat = filterCat(data, 'category', 'headings', 'abstract_cat', context.params.cat, 'not', '')\r\n  return {props:{data, currentCat, intro,}}\r\n}\r\n\r\nfunction Cat(props){\r\nconst cat = props.currentCat.map((post)=><Post key={post._id} post={post}/>)\r\nconst latest_news =  categoryReturn(props.data, 'latest_news', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\nconst top_news =  categoryReturn(props.data, 'top_stories', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\nconst catArray = spliter(cat, 12)\r\n  return(\r\n<div>\r\n  <Head/>\r\n  <Nav/>\r\n  <CatComponent intro={props.intro} posts={{cat:catArray, latest_news, top_news}}/>\r\n</div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Cat"]},"metadata":{},"sourceType":"module"}