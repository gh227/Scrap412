{"ast":null,"code":"import { MongoClient } from 'mongodb';\n/*const client = new MongoClient(\"mongodb+srv://hero227:Justpassword_412@cluster0-3mirl.gcp.mongodb.net/facto?retryWrites=true&w=majority\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n});\n\nasync function database(req, res, next) {\n \n  try{\n    if (!client.isConnected()) await client.connect();\n  }\n  catch(err){\n    console.log(err)\n  }\n  \n  console.log(\"hit db function\")\n  req.dbClient = client;\n  req.db = client.db(process.env.DB_NAME);\n  console.log('connection successful')\n  return next();\n}\n\n\n*/\n\nconst client = new MongoClient(process.env.MONGO_URI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\nasync function database(req, res, next) {\n  try {\n    if (!client.isConnected()) await client.connect();\n    req.dbClient = client;\n    req.db = client.db(process.env.DB);\n    return next();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default database;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/middlewares/db.js"],"names":["MongoClient","client","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","database","req","res","next","isConnected","connect","dbClient","db","DB","err","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAMC,MAAM,GAAG,IAAID,WAAJ,CAAgBE,OAAO,CAACC,GAAR,CAAYC,SAA5B,EAAuC;AACpDC,EAAAA,eAAe,EAAE,IADmC;AAEpDC,EAAAA,kBAAkB,EAAE;AAFgC,CAAvC,CAAf;;AAKA,eAAeC,QAAf,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,IAAlC,EAAwC;AAEtC,MAAG;AACD,QAAI,CAACT,MAAM,CAACU,WAAP,EAAL,EAA2B,MAAMV,MAAM,CAACW,OAAP,EAAN;AAE7BJ,IAAAA,GAAG,CAACK,QAAJ,GAAeZ,MAAf;AACAO,IAAAA,GAAG,CAACM,EAAJ,GAASb,MAAM,CAACa,EAAP,CAAUZ,OAAO,CAACC,GAAR,CAAYY,EAAtB,CAAT;AACA,WAAOL,IAAI,EAAX;AACC,GAND,CAOA,OAAMM,GAAN,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AAGF;;AACD,eAAeT,QAAf","sourcesContent":["import { MongoClient } from 'mongodb'\n\n\n/*const client = new MongoClient(\"mongodb+srv://hero227:Justpassword_412@cluster0-3mirl.gcp.mongodb.net/facto?retryWrites=true&w=majority\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n});\n\nasync function database(req, res, next) {\n \n  try{\n    if (!client.isConnected()) await client.connect();\n  }\n  catch(err){\n    console.log(err)\n  }\n  \n  console.log(\"hit db function\")\n  req.dbClient = client;\n  req.db = client.db(process.env.DB_NAME);\n  console.log('connection successful')\n  return next();\n}\n\n\n*/\nconst client = new MongoClient(process.env.MONGO_URI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n})\n\nasync function database(req, res, next) {\n \n  try{\n    if (!client.isConnected()) await client.connect();\n\n  req.dbClient = client;\n  req.db = client.db(process.env.DB);\n  return next();\n  }\n  catch(err){\n    console.log(err)\n  }\n  \n  \n}\nexport default database"]},"metadata":{},"sourceType":"module"}