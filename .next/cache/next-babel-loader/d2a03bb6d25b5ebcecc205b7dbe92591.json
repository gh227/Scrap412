{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function fetcher(url) {\n  var r;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          r = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(r.json());\n\n        case 5:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/lib/fetch.js"],"names":["fetcher","url","fetch","r","json"],"mappings":";AAAA,eAAgB,SAAeA,OAAf,CAAuBC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACMC,KAAK,CAACD,GAAD,CADX;;AAAA;AACJE,UAAAA,CADI;AAAA;AAAA,2CAGHA,CAAC,CAACC,IAAF,EAHG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export default  async function fetcher(url) { \n      const r = await fetch(url);\n     \nreturn await r.json(); }\n"]},"metadata":{},"sourceType":"module"}