{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hero\\\\Documents\\\\projects\\\\Next\\\\components\\\\FirebaseAuth.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* globals window */\nimport { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport cookie from 'js-cookie';\nvar config = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_PUBLIC_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID\n};\nfirebase.initializeApp(config);\nvar firebaseAuthConfig = {\n  signInFlow: 'popup',\n  // Auth providers\n  // https://github.com/firebase/firebaseui-web#configure-oauth-providers\n  signInOptions: [{\n    provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    requireDisplayName: false\n  }],\n  signInSuccessUrl: '/',\n  credentialHelper: 'none',\n  callbacks: {\n    signInSuccessWithAuthResult: function signInSuccessWithAuthResult(_ref, redirectUrl) {\n      var user, uid, email, xa, userData;\n      return _regeneratorRuntime.async(function signInSuccessWithAuthResult$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = _ref.user;\n              // xa is the access token, which can be retrieved through\n              // firebase.auth().currentUser.getIdToken()\n              uid = user.uid, email = user.email, xa = user.xa;\n              userData = {\n                id: uid,\n                email: email,\n                token: xa\n              };\n              cookie.set('auth', userData, {\n                expires: 1\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }\n};\n\nvar FirebaseAuth = function FirebaseAuth() {\n  // Do not SSR FirebaseUI, because it is not supported.\n  // https://github.com/firebase/firebaseui-web/issues/213\n  var _useState = useState(false),\n      renderAuth = _useState[0],\n      setRenderAuth = _useState[1];\n\n  useEffect(function () {\n    if (true) {\n      setRenderAuth(true);\n    }\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, renderAuth ? __jsx(StyledFirebaseAuth, {\n    uiConfig: firebaseAuthConfig,\n    firebaseAuth: firebase.auth(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default FirebaseAuth;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/components/FirebaseAuth.js"],"names":["useEffect","useState","StyledFirebaseAuth","firebase","cookie","config","apiKey","process","env","NEXT_PUBLIC_FIREBASE_PUBLIC_API_KEY","authDomain","NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN","databaseURL","NEXT_PUBLIC_FIREBASE_DATABASE_URL","projectId","NEXT_PUBLIC_FIREBASE_PROJECT_ID","initializeApp","firebaseAuthConfig","signInFlow","signInOptions","provider","auth","EmailAuthProvider","PROVIDER_ID","requireDisplayName","signInSuccessUrl","credentialHelper","callbacks","signInSuccessWithAuthResult","redirectUrl","user","uid","email","xa","userData","id","token","set","expires","FirebaseAuth","renderAuth","setRenderAuth"],"mappings":";;;;;;;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,mCADP;AAEbC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,gCAFX;AAGbC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,iCAHZ;AAIbC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJV,CAAf;AAMAZ,QAAQ,CAACa,aAAT,CAAuBX,MAAvB;AACA,IAAMY,kBAAkB,GAAG;AACzBC,EAAAA,UAAU,EAAE,OADa;AAEzB;AACA;AACAC,EAAAA,aAAa,EAAE,CACb;AACEC,IAAAA,QAAQ,EAAEjB,QAAQ,CAACkB,IAAT,CAAcC,iBAAd,CAAgCC,WAD5C;AAEEC,IAAAA,kBAAkB,EAAE;AAFtB,GADa,CAJU;AAUzBC,EAAAA,gBAAgB,EAAE,GAVO;AAWzBC,EAAAA,gBAAgB,EAAE,MAXO;AAYzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,2BAA2B,EAAE,2CAAiBC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,IAAT,QAASA,IAAT;AAC3B;AACA;AACQC,cAAAA,GAHmB,GAGAD,IAHA,CAGnBC,GAHmB,EAGdC,KAHc,GAGAF,IAHA,CAGdE,KAHc,EAGPC,EAHO,GAGAH,IAHA,CAGPG,EAHO;AAIrBC,cAAAA,QAJqB,GAIV;AACfC,gBAAAA,EAAE,EAAEJ,GADW;AAEfC,gBAAAA,KAAK,EAALA,KAFe;AAGfI,gBAAAA,KAAK,EAAEH;AAHQ,eAJU;AAS3B7B,cAAAA,MAAM,CAACiC,GAAP,CAAW,MAAX,EAAmBH,QAAnB,EAA6B;AAC3BI,gBAAAA,OAAO,EAAE;AADkB,eAA7B;;AAT2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADpB;AAZc,CAA3B;;AA6BA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB;AACA;AAFyB,kBAGWtC,QAAQ,CAAC,KAAD,CAHnB;AAAA,MAGlBuC,UAHkB;AAAA,MAGNC,aAHM;;AAIzBzC,EAAAA,SAAS,CAAC,YAAM;AACd,cAAmC;AACjCyC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,GACT,MAAC,kBAAD;AACE,IAAA,QAAQ,EAAEvB,kBADZ;AAEE,IAAA,YAAY,EAAEd,QAAQ,CAACkB,IAAT,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAKP,IANN,CADF;AAUD,CAnBD;;AAqBA,eAAekB,YAAf","sourcesContent":["/* globals window */\r\nimport { useEffect, useState } from 'react'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport cookie from 'js-cookie'\r\n\r\nconst config = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_PUBLIC_API_KEY,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n}\r\nfirebase.initializeApp(config)\r\nconst firebaseAuthConfig = {\r\n  signInFlow: 'popup',\r\n  // Auth providers\r\n  // https://github.com/firebase/firebaseui-web#configure-oauth-providers\r\n  signInOptions: [\r\n    {\r\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      requireDisplayName: false,\r\n    },\r\n  ],\r\n  signInSuccessUrl: '/',\r\n  credentialHelper: 'none',\r\n  callbacks: {\r\n    signInSuccessWithAuthResult: async ({ user }, redirectUrl) => {\r\n      // xa is the access token, which can be retrieved through\r\n      // firebase.auth().currentUser.getIdToken()\r\n      const { uid, email, xa } = user\r\n      const userData = {\r\n        id: uid,\r\n        email,\r\n        token: xa,\r\n      }\r\n      cookie.set('auth', userData, {\r\n        expires: 1,\r\n      })\r\n    },\r\n  },\r\n}\r\n\r\nconst FirebaseAuth = () => {\r\n  // Do not SSR FirebaseUI, because it is not supported.\r\n  // https://github.com/firebase/firebaseui-web/issues/213\r\n  const [renderAuth, setRenderAuth] = useState(false)\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      setRenderAuth(true)\r\n    }\r\n  }, [])\r\n  return (\r\n    <div>\r\n      {renderAuth ? (\r\n        <StyledFirebaseAuth\r\n          uiConfig={firebaseAuthConfig}\r\n          firebaseAuth={firebase.auth()}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FirebaseAuth\r\n"]},"metadata":{},"sourceType":"module"}