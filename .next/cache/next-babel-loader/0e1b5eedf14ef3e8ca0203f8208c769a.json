{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hero\\\\Documents\\\\projects\\\\Next\\\\components\\\\FirebaseAuth.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* globals window */\nimport { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport cookie from 'js-cookie';\nimport initFirebase from '../utils/auth/initFirebase'; // Init the Firebase app.\n\ninitFirebase();\nconst firebaseAuthConfig = {\n  signInFlow: 'popup',\n  // Auth providers\n  // https://github.com/firebase/firebaseui-web#configure-oauth-providers\n  signInOptions: [{\n    provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    requireDisplayName: false,\n    buttonColor: '#0078ff'\n  }],\n  signInSuccessUrl: '/',\n  credentialHelper: 'none',\n  callbacks: {\n    signInSuccessWithAuthResult: async ({\n      user\n    }, redirectUrl) => {\n      // xa is the access token, which can be retrieved through\n      // firebase.auth().currentUser.getIdToken()\n      const {\n        uid,\n        email,\n        xa\n      } = user;\n      const userData = {\n        id: uid,\n        email,\n        token: xa\n      };\n      cookie.set('auth', userData, {\n        expires: 1\n      });\n    }\n  }\n};\n\nconst FirebaseAuth = () => {\n  // Do not SSR FirebaseUI, because it is not supported.\n  // https://github.com/firebase/firebaseui-web/issues/213\n  const {\n    0: renderAuth,\n    1: setRenderAuth\n  } = useState(false);\n  useEffect(() => {\n    if (false) {\n      setRenderAuth(true);\n    }\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, renderAuth ? __jsx(StyledFirebaseAuth, {\n    uiConfig: firebaseAuthConfig,\n    firebaseAuth: firebase.auth(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default FirebaseAuth;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/components/FirebaseAuth.js"],"names":["useEffect","useState","StyledFirebaseAuth","firebase","cookie","initFirebase","firebaseAuthConfig","signInFlow","signInOptions","provider","auth","EmailAuthProvider","PROVIDER_ID","requireDisplayName","buttonColor","signInSuccessUrl","credentialHelper","callbacks","signInSuccessWithAuthResult","user","redirectUrl","uid","email","xa","userData","id","token","set","expires","FirebaseAuth","renderAuth","setRenderAuth"],"mappings":";;;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CAEA;;AACAA,YAAY;AAEZ,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,UAAU,EAAE,OADa;AAEzB;AACA;AACAC,EAAAA,aAAa,EAAE,CACb;AACEC,IAAAA,QAAQ,EAAEN,QAAQ,CAACO,IAAT,CAAcC,iBAAd,CAAgCC,WAD5C;AAEEC,IAAAA,kBAAkB,EAAE,KAFtB;AAGEC,IAAAA,WAAW,EAAE;AAHf,GADa,CAJU;AAWzBC,EAAAA,gBAAgB,EAAE,GAXO;AAYzBC,EAAAA,gBAAgB,EAAE,MAZO;AAazBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,2BAA2B,EAAE,OAAO;AAAEC,MAAAA;AAAF,KAAP,EAAiBC,WAAjB,KAAiC;AAC5D;AACA;AACA,YAAM;AAAEC,QAAAA,GAAF;AAAOC,QAAAA,KAAP;AAAcC,QAAAA;AAAd,UAAqBJ,IAA3B;AACA,YAAMK,QAAQ,GAAG;AACfC,QAAAA,EAAE,EAAEJ,GADW;AAEfC,QAAAA,KAFe;AAGfI,QAAAA,KAAK,EAAEH;AAHQ,OAAjB;AAKAnB,MAAAA,MAAM,CAACuB,GAAP,CAAW,MAAX,EAAmBH,QAAnB,EAA6B;AAC3BI,QAAAA,OAAO,EAAE;AADkB,OAA7B;AAGD;AAbQ;AAbc,CAA3B;;AA8BA,MAAMC,YAAY,GAAG,MAAM;AACzB;AACA;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8B9B,QAAQ,CAAC,KAAD,CAA5C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,eAAmC;AACjC+B,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,GACT,MAAC,kBAAD;AACE,IAAA,QAAQ,EAAExB,kBADZ;AAEE,IAAA,YAAY,EAAEH,QAAQ,CAACO,IAAT,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAKP,IANN,CADF;AAUD,CAnBD;;AAqBA,eAAemB,YAAf","sourcesContent":["/* globals window */\r\nimport { useEffect, useState } from 'react'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport cookie from 'js-cookie'\r\nimport initFirebase from '../utils/auth/initFirebase'\r\n\r\n// Init the Firebase app.\r\ninitFirebase()\r\n\r\nconst firebaseAuthConfig = {\r\n  signInFlow: 'popup',\r\n  // Auth providers\r\n  // https://github.com/firebase/firebaseui-web#configure-oauth-providers\r\n  signInOptions: [\r\n    {\r\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      requireDisplayName: false,\r\n      buttonColor: '#0078ff'\r\n    },\r\n  ],\r\n  signInSuccessUrl: '/',\r\n  credentialHelper: 'none',\r\n  callbacks: {\r\n    signInSuccessWithAuthResult: async ({ user }, redirectUrl) => {\r\n      // xa is the access token, which can be retrieved through\r\n      // firebase.auth().currentUser.getIdToken()\r\n      const { uid, email, xa } = user\r\n      const userData = {\r\n        id: uid,\r\n        email,\r\n        token: xa,\r\n      }\r\n      cookie.set('auth', userData, {\r\n        expires: 1,\r\n      })\r\n    },\r\n  },\r\n}\r\n\r\nconst FirebaseAuth = () => {\r\n  // Do not SSR FirebaseUI, because it is not supported.\r\n  // https://github.com/firebase/firebaseui-web/issues/213\r\n  const [renderAuth, setRenderAuth] = useState(false)\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      setRenderAuth(true)\r\n    }\r\n  }, [])\r\n  return (\r\n    <div>\r\n      {renderAuth ? (\r\n        <StyledFirebaseAuth\r\n          uiConfig={firebaseAuthConfig}\r\n          firebaseAuth={firebase.auth()}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FirebaseAuth\r\n"]},"metadata":{},"sourceType":"module"}