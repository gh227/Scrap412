{"ast":null,"code":"export async function getPosts(req, cat) {\n  const postsArray = await req.db.collection('posts').find({\n    category: cat\n  }).sort({\n    createdAt: -1\n  }).toArray();\n  if (!postsArray) return null;\n  const posts = postsArray.map(value => {\n    const {\n      _id,\n      image_link,\n      caption,\n      author,\n      source,\n      source_link,\n      category,\n      headings,\n      abstract_cat,\n      content\n    } = value;\n    return {\n      _id,\n      image_link,\n      caption,\n      author,\n      source,\n      source_link,\n      category,\n      headings,\n      abstract_cat,\n      content\n    };\n  });\n  return {\n    posts\n  };\n}","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/lib/db.js"],"names":["getPosts","req","cat","postsArray","db","collection","find","category","sort","createdAt","toArray","posts","map","value","_id","image_link","caption","author","source","source_link","headings","abstract_cat","content"],"mappings":"AAAA,OAAO,eAAeA,QAAf,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkC;AACrC,QAAMC,UAAU,GAAG,MAAMF,GAAG,CAACG,EAAJ,CACxBC,UADwB,CACb,OADa,EAExBC,IAFwB,CAEnB;AAACC,IAAAA,QAAQ,EAACL;AAAV,GAFmB,EAGxBM,IAHwB,CAGnB;AAACC,IAAAA,SAAS,EAAC,CAAC;AAAZ,GAHmB,EAIxBC,OAJwB,EAAzB;AAMA,MAAI,CAACP,UAAL,EAAiB,OAAO,IAAP;AACjB,QAAMQ,KAAK,GAAGR,UAAU,CAACS,GAAX,CAAeC,KAAK,IAAI;AACpC,UAAM;AAACC,MAAAA,GAAD;AAAKC,MAAAA,UAAL;AAAgBC,MAAAA,OAAhB;AAAwBC,MAAAA,MAAxB;AAA+BC,MAAAA,MAA/B;AAAsCC,MAAAA,WAAtC;AAAkDZ,MAAAA,QAAlD;AAA2Da,MAAAA,QAA3D;AAAoEC,MAAAA,YAApE;AAAiFC,MAAAA;AAAjF,QAA2FT,KAAjG;AACA,WAAO;AACLC,MAAAA,GADK;AAELC,MAAAA,UAFK;AAGLC,MAAAA,OAHK;AAILC,MAAAA,MAJK;AAKLC,MAAAA,MALK;AAMLC,MAAAA,WANK;AAOLZ,MAAAA,QAPK;AAQLa,MAAAA,QARK;AASLC,MAAAA,YATK;AAUPC,MAAAA;AAVO,KAAP;AAWD,GAba,CAAd;AAcA,SAAO;AAACX,IAAAA;AAAD,GAAP;AACD","sourcesContent":["export async function getPosts(req, cat) {\r\n    const postsArray = await req.db\r\n    .collection('posts')\r\n    .find({category:cat})\r\n    .sort({createdAt:-1})\r\n    .toArray();\r\n\r\n    if (!postsArray) return null;\r\n    const posts = postsArray.map(value => {\r\n      const {_id,image_link,caption,author,source,source_link,category,headings,abstract_cat,content} =value\r\n      return {\r\n        _id,\r\n        image_link,\r\n        caption,\r\n        author,\r\n        source,\r\n        source_link,\r\n        category,\r\n        headings,\r\n        abstract_cat,\r\n      content}\r\n    });\r\n    return {posts}\r\n  }"]},"metadata":{},"sourceType":"module"}