{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hero\\\\Documents\\\\projects\\\\Next\\\\pages\\\\news\\\\[cat].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from '../../components/head';\nimport Nav from '../../components/nav';\nimport { categoryReturn, filterCat } from '../../lib/posts';\nimport { getPosts } from '../../lib/db';\nimport middleware from '../../middlewares/middleware';\n\nconst Post = props => {\n  const {\n    post\n  } = props;\n  return __jsx(\"div\", {\n    className: \"col-lg-4 col-md-6 col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"news-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, post.image_link !== null ? __jsx(\"a\", {\n    className: \"news-items\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }\n  })) : __jsx(\"a\", {\n    className: \"news-items\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  })), __jsx(\"a\", {\n    className: \"news-items\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, post.caption)));\n};\n\nconst Abstract = props => {\n  const {\n    post\n  } = props;\n  return __jsx(\"div\", {\n    className: \"col-md-12 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"news-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, post.image_link !== null ? __jsx(\"a\", {\n    className: \"news-items\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  })) : __jsx(\"a\", {\n    className: \"news-items\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  })), __jsx(\"a\", {\n    className: \"news-items\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, post.caption)));\n};\n\nexport async function getServerSideProps(context) {\n  await middleware.apply(context.req, context.res);\n  const posts = await getPosts(context.req, context.params.cat);\n  if (!posts) context.res.statusCode = 404;\n  const intro = categoryReturn(posts.posts, context.params.cat, 1, 'headings')[0];\n  const currentCat = filterCat(posts.posts, 'category', 'headings', 'abstract_cat', context.params.cat, 'not', '');\n  return {\n    props: {\n      posts,\n      currentCat,\n      intro\n    }\n  };\n}\n\nfunction Cat(props) {\n  const {\n    posts\n  } = props.posts; //console.log(!posts instanceof Array)\n\n  const latest_news = categoryReturn(['44', '006', '99', '98', '97'], 'latest_news', 4, 'abstract_cat').map(post => __jsx(Abstract, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 113\n    }\n  }));\n  const top_news = categoryReturn(posts, 'top_stories', 4, 'abstract_cat').map(post => __jsx(Abstract, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 87\n    }\n  }));\n  const cat = props.currentCat.map(post => __jsx(Post, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 42\n    }\n  })); //console.log(props.intro, cat, latest_news, top_news)\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }), __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), __jsx(Cat, {\n    posts: {\n      latest_news,\n      top_news,\n      cat\n    },\n    intro: props.intro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }));\n}\n/*\r\nconst intro = categoryReturn(data.posts, 'intro', 1, 'abstract_cat')[0]\r\n   const cat =  categoryReturn(data.posts, 'business', 6, 'category').map((post)=><Post key={post._id} post={post}/>)\r\n   const latest_news =  categoryReturn(data.posts, 'latest_news', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\n   const top_news =  categoryReturn(data.posts, 'top_stories', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\n  return (\r\n    <div>\r\n        <Head/>\r\n        <Nav/>\r\n        \r\n    </div>\r\n  )\r\n*/\n\n\nexport default Cat;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/pages/news/[cat].js"],"names":["Head","Nav","categoryReturn","filterCat","getPosts","middleware","Post","props","post","image_link","caption","Abstract","getServerSideProps","context","apply","req","res","posts","params","cat","statusCode","intro","currentCat","Cat","latest_news","map","_id","top_news"],"mappings":"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","sourcesContent":["import Head from '../../components/head'\r\nimport Nav from '../../components/nav'\r\nimport {categoryReturn, filterCat} from '../../lib/posts'\r\nimport { getPosts } from '../../lib/db';\r\nimport middleware from '../../middlewares/middleware';\r\n\r\n\r\nconst Post =(props)=>{\r\n  const {post} = props;\r\n  return(                  \r\n      <div className=\"col-lg-4 col-md-6 col-sm-6\">\r\n          <div className=\"news-container\">\r\n              {\r\n              post.image_link !== null ?\r\n              <a className=\"news-items\" href=''>\r\n              <img src={post.image_link} className=\"img-fluid sub-inner-img\" />\r\n              </a>\r\n              :\r\n              <a className=\"news-items\" href=''>\r\n              <img src={post.image_link}  className=\"img-fluid sub-inner-img\"/>\r\n              </a>\r\n              }\r\n            <a className=\"news-items\" href=\"\">{post.caption}\r\n            </a>   \r\n          </div>\r\n      </div>\r\n      )\r\n  }\r\n  \r\n  const Abstract =(props)=>{\r\n      const {post} = props;\r\n      return(                  \r\n          <div className=\"col-md-12 col-sm-12\">\r\n              <div className=\"news-container\">\r\n                  {\r\n                  post.image_link !== null ?\r\n                  <a className=\"news-items\" href=''>\r\n                  <img src={post.image_link} className=\"img-fluid sub-inner-img\" />\r\n                  </a>\r\n                  :\r\n                  <a className=\"news-items\" href=''>\r\n                  <img src={post.image_link}  className=\"img-fluid sub-inner-img\"/>\r\n                  </a>\r\n                  }\r\n                <a className=\"news-items\" href=\"\">{post.caption}\r\n                </a>   \r\n              </div>\r\n          </div>\r\n          )\r\n  }\r\n\r\nexport async function getServerSideProps(context) {\r\n  await middleware.apply(context.req, context.res);\r\n const posts = await getPosts(context.req, context.params.cat);\r\n  if (!posts) context.res.statusCode = 404;\r\n  const intro = categoryReturn(posts.posts, context.params.cat, 1, 'headings')[0];\r\n  const currentCat = filterCat(posts.posts, 'category', 'headings', 'abstract_cat', context.params.cat, 'not', '')\r\n  \r\n  return {props:{posts, currentCat, intro}}\r\n}\r\n\r\nfunction Cat(props){\r\n  const {posts} = props.posts\r\n  //console.log(!posts instanceof Array)\r\nconst latest_news =  categoryReturn(['44','006','99','98', '97'], 'latest_news', 4, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>);\r\nconst top_news =  categoryReturn(posts, 'top_stories', 4, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>);\r\n\r\nconst cat = props.currentCat.map((post)=><Post key={post._id} post={post}/>)\r\n//console.log(props.intro, cat, latest_news, top_news)\r\n  return(\r\n    <div>\r\n     <Head/>\r\n        <Nav/>\r\n        <Cat posts={{latest_news, top_news, cat}} intro={props.intro}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n/*\r\nconst intro = categoryReturn(data.posts, 'intro', 1, 'abstract_cat')[0]\r\n   const cat =  categoryReturn(data.posts, 'business', 6, 'category').map((post)=><Post key={post._id} post={post}/>)\r\n   const latest_news =  categoryReturn(data.posts, 'latest_news', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\n   const top_news =  categoryReturn(data.posts, 'top_stories', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\n  return (\r\n    <div>\r\n        <Head/>\r\n        <Nav/>\r\n        \r\n    </div>\r\n  )\r\n*/\r\n\r\nexport default Cat"]},"metadata":{},"sourceType":"module"}