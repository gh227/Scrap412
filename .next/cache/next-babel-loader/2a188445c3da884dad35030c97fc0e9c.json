{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hero\\\\Documents\\\\projects\\\\Next\\\\pages\\\\news\\\\[cat].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from '../../components/head';\nimport Nav from '../../components/nav';\nimport Intro from '../../components/Cat';\nimport fetch from 'node-fetch';\nimport useSWR from 'swr';\nexport async function getServerSideProps() {\n  //console.log(`${process.env.HOST}/api/posts`)\n  const data = await fetcher(`http://localhost:3000/api/posts/cat`);\n  return {\n    props: {\n      data\n    }\n  };\n}\n\nfunction Cat(props) {\n  const initialData = props.data;\n  const {\n    data\n  } = useSWR(`http://localhost:3000/api/posts`, fetcher, {\n    initialData\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }\n  });\n}\n/*\r\nconst fetcher =(url)=>{return fetch(url).then(r => r.json())}\r\nconst Post =(props)=>{\r\nconst {post} = props;\r\nreturn(                  \r\n    <div className=\"col-lg-4 col-md-6 col-sm-6\">\r\n        <div className=\"news-container\">\r\n            {\r\n            post.image_link !== null ?\r\n            <a className=\"news-items\" href=''>\r\n            <img src={post.image_link} className=\"img-fluid sub-inner-img\" />\r\n            </a>\r\n            :\r\n            <a className=\"news-items\" href=''>\r\n            <img src={post.image_link}  className=\"img-fluid sub-inner-img\"/>\r\n            </a>\r\n            }\r\n          <a className=\"news-items\" href=\"\">{post.caption}\r\n          </a>   \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Abstract =(props)=>{\r\n    const {post} = props;\r\n    return(                  \r\n        <div className=\"col-md-12 col-sm-12\">\r\n            <div className=\"news-container\">\r\n                {\r\n                post.image_link !== null ?\r\n                <a className=\"news-items\" href=''>\r\n                <img src={post.image_link} className=\"img-fluid sub-inner-img\" />\r\n                </a>\r\n                :\r\n                <a className=\"news-items\" href=''>\r\n                <img src={post.image_link}  className=\"img-fluid sub-inner-img\"/>\r\n                </a>\r\n                }\r\n              <a className=\"news-items\" href=\"\">{post.caption}\r\n              </a>   \r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport async function getServerSideProps() {\r\n    //console.log(`${process.env.HOST}/api/posts`)\r\n    const data = await fetcher(`http://localhost:3000/api/posts`)\r\n    return { props: { data } }\r\n  }\r\nconst categoryReturn =(data, category, num, type)=>{\r\n   return data.reduce((acc, post)=>{\r\n        if(acc.length === num) return acc;\r\n        if(post[type] === category) acc.push(post);\r\n        return acc;\r\n    },[])\r\n    \r\n}  \r\nfunction Index (props) {\r\n    const initialData = props.data\r\n   const { data } = useSWR(`http://localhost:3000/api/posts`, fetcher, { initialData })\r\n   const intro = categoryReturn(data.posts, 'intro', 1, 'abstract_cat')[0]\r\n   const business =  categoryReturn(data.posts, 'business', 6, 'category').map((post)=><Post key={post._id} post={post}/>)\r\n   const latest_news =  categoryReturn(data.posts, 'latest_news', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\n   const top_news =  categoryReturn(data.posts, 'top_stories', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\n    return (\r\n    <div>\r\n        <Head/>\r\n        <Nav/>\r\n        <Intro intro={intro} posts= {{latest_news, top_news, business, politics, celebrities, sport, social_media, international,\r\n        tech_inno, health}}/>\r\n    </div>\r\n    \r\n    )\r\n  }\r\n  */\n\n\nexport default Cat;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/pages/news/[cat].js"],"names":["Head","Nav","Intro","fetch","useSWR","getServerSideProps","data","fetcher","props","Cat","initialData"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAIA,OAAO,eAAeC,kBAAf,GAAoC;AACvC;AACA,QAAMC,IAAI,GAAG,MAAMC,OAAO,CAAE,qCAAF,CAA1B;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAEF,MAAAA;AAAF;AAAT,GAAP;AACD;;AAGD,SAASG,GAAT,CAAaD,KAAb,EAAoB;AAClB,QAAME,WAAW,GAAGF,KAAK,CAACF,IAA1B;AACD,QAAM;AAAEA,IAAAA;AAAF,MAAWF,MAAM,CAAE,iCAAF,EAAoCG,OAApC,EAA6C;AAAEG,IAAAA;AAAF,GAA7C,CAAvB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGA;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA,eAAeD,GAAf","sourcesContent":["import Head from '../../components/head'\r\nimport Nav from '../../components/nav'\r\nimport Intro from '../../components/Cat'\r\nimport fetch from 'node-fetch'\r\nimport useSWR from 'swr'\r\n\r\n\r\n\r\nexport async function getServerSideProps() {\r\n    //console.log(`${process.env.HOST}/api/posts`)\r\n    const data = await fetcher(`http://localhost:3000/api/posts/cat`)\r\n    return { props: { data } }\r\n  }\r\n\r\n\r\n  function Cat(props) {\r\n    const initialData = props.data\r\n   const { data } = useSWR(`http://localhost:3000/api/posts`, fetcher, { initialData })\r\n   return(\r\n       <div></div>\r\n   )\r\n  }\r\n\r\n/*\r\nconst fetcher =(url)=>{return fetch(url).then(r => r.json())}\r\nconst Post =(props)=>{\r\nconst {post} = props;\r\nreturn(                  \r\n    <div className=\"col-lg-4 col-md-6 col-sm-6\">\r\n        <div className=\"news-container\">\r\n            {\r\n            post.image_link !== null ?\r\n            <a className=\"news-items\" href=''>\r\n            <img src={post.image_link} className=\"img-fluid sub-inner-img\" />\r\n            </a>\r\n            :\r\n            <a className=\"news-items\" href=''>\r\n            <img src={post.image_link}  className=\"img-fluid sub-inner-img\"/>\r\n            </a>\r\n            }\r\n          <a className=\"news-items\" href=\"\">{post.caption}\r\n          </a>   \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Abstract =(props)=>{\r\n    const {post} = props;\r\n    return(                  \r\n        <div className=\"col-md-12 col-sm-12\">\r\n            <div className=\"news-container\">\r\n                {\r\n                post.image_link !== null ?\r\n                <a className=\"news-items\" href=''>\r\n                <img src={post.image_link} className=\"img-fluid sub-inner-img\" />\r\n                </a>\r\n                :\r\n                <a className=\"news-items\" href=''>\r\n                <img src={post.image_link}  className=\"img-fluid sub-inner-img\"/>\r\n                </a>\r\n                }\r\n              <a className=\"news-items\" href=\"\">{post.caption}\r\n              </a>   \r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport async function getServerSideProps() {\r\n    //console.log(`${process.env.HOST}/api/posts`)\r\n    const data = await fetcher(`http://localhost:3000/api/posts`)\r\n    return { props: { data } }\r\n  }\r\nconst categoryReturn =(data, category, num, type)=>{\r\n   return data.reduce((acc, post)=>{\r\n        if(acc.length === num) return acc;\r\n        if(post[type] === category) acc.push(post);\r\n        return acc;\r\n    },[])\r\n    \r\n}  \r\nfunction Index (props) {\r\n    const initialData = props.data\r\n   const { data } = useSWR(`http://localhost:3000/api/posts`, fetcher, { initialData })\r\n   const intro = categoryReturn(data.posts, 'intro', 1, 'abstract_cat')[0]\r\n   const business =  categoryReturn(data.posts, 'business', 6, 'category').map((post)=><Post key={post._id} post={post}/>)\r\n   const latest_news =  categoryReturn(data.posts, 'latest_news', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\n   const top_news =  categoryReturn(data.posts, 'top_stories', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\n    return (\r\n    <div>\r\n        <Head/>\r\n        <Nav/>\r\n        <Intro intro={intro} posts= {{latest_news, top_news, business, politics, celebrities, sport, social_media, international,\r\n        tech_inno, health}}/>\r\n    </div>\r\n    \r\n    )\r\n  }\r\n  */\r\n\r\nexport default Cat"]},"metadata":{},"sourceType":"module"}