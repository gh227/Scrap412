{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hero\\\\Documents\\\\projects\\\\Next\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from '../components/head';\nimport Nav from '../components/nav';\nimport Intro from '../components/Intro';\nimport Footer from '../components/Footer';\nimport { categoryReturn, filterCat } from '../lib/posts';\nimport fetch from 'node-fetch';\nimport useSWR from 'swr';\nimport Link from 'next/link';\nimport Loader from '../components/Loader';\n\nconst fetcher = async url => {\n  const r = await fetch(url);\n  return r.json();\n};\n\nconst Post = props => {\n  const {\n    post\n  } = props;\n  return __jsx(\"div\", {\n    className: \"col-lg-4 col-md-6 col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"news-container \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, post.image_link !== null ? __jsx(Link, {\n    href: \"/news/[cat]/[title]\",\n    as: `/news/${post.category}/${post.caption}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"news-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }))) : __jsx(Link, {\n    href: \"/news/[cat]/[title]\",\n    as: `/news/${post.category}/${post.caption}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"news-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }))), __jsx(Link, {\n    href: \"/news/[cat]/[title]\",\n    as: `/news/${post.category}/${post.caption}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"news-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, post.caption))));\n};\n\nconst Abstract = props => {\n  const {\n    post\n  } = props;\n  return __jsx(\"div\", {\n    className: \"col-md-12 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"news-container news-tablet-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, post.image_link !== null ? __jsx(Link, {\n    href: \"/news/[cat]/[title]\",\n    as: `/news/${post.category}/${post.caption}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    className: \"news-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }))) : __jsx(Link, {\n    href: \"/news/[cat]/[title]\",\n    as: `/news/${post.category}/${post.caption}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    className: \"news-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    src: post.image_link,\n    className: \"img-fluid sub-inner-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }))), __jsx(Link, {\n    href: \"/news/[cat]/[title]\",\n    as: `/news/${post.category}/${post.caption}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: \"news-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, post.caption))));\n};\n\nexport async function getServerSideProps() {\n  //console.log(`${process.env.HOST}/api/posts`)\n  const data = await fetcher(`http://localhost:3000/api/posts`);\n  return {\n    props: {\n      data\n    }\n  };\n}\n\nfunction Index(props) {\n  const initialData = props.data;\n  const {\n    data\n  } = useSWR(`http://localhost:3000/api/posts`, fetcher, {\n    initialData\n  });\n  const intro = categoryReturn(data.posts, 'intro', 1, 'abstract_cat')[0];\n  const business = filterCat(data.posts, {\n    category: 'business',\n    headings: 'not',\n    abstract_cat: ''\n  }).map(post => __jsx(Post, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 111\n    }\n  }));\n  const politics = filterCat(data.posts, {\n    category: 'politics',\n    headings: 'not',\n    abstract_cat: ''\n  }).map(post => __jsx(Post, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 111\n    }\n  }));\n  const celebrities = filterCat(data.posts, {\n    category: 'celebrities',\n    headings: 'not',\n    abstract_cat: ''\n  }).map(post => __jsx(Post, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 117\n    }\n  }));\n  const sport = filterCat(data.posts, {\n    category: 'sport',\n    headings: 'not',\n    abstract_cat: ''\n  }).map(post => __jsx(Post, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 105\n    }\n  }));\n  const social_media = filterCat(data.posts, {\n    category: 'social_media',\n    headings: 'not',\n    abstract_cat: ''\n  }).map(post => __jsx(Post, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 119\n    }\n  }));\n  const international = filterCat(data.posts, {\n    category: 'international',\n    headings: 'not',\n    abstract_cat: ''\n  }).map(post => __jsx(Post, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 121\n    }\n  }));\n  const tech_inno = filterCat(data.posts, {\n    category: 'tech_inno',\n    headings: 'not',\n    abstract_cat: ''\n  }).map(post => __jsx(Post, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 113\n    }\n  }));\n  const health = filterCat(data.posts, {\n    category: 'health',\n    headings: 'not',\n    abstract_cat: ''\n  }).map(post => __jsx(Post, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 107\n    }\n  }));\n  const latest_news = categoryReturn(data.posts, 'latest_news', 5, 'abstract_cat').map(post => __jsx(Abstract, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 98\n    }\n  }));\n  const top_news = categoryReturn(data.posts, 'top_stories', 5, 'abstract_cat').map(post => __jsx(Abstract, {\n    key: post._id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 95\n    }\n  }));\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    id: \"content\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), __jsx(Intro, {\n    intro: intro,\n    posts: {\n      latest_news,\n      top_news,\n      business,\n      politics,\n      celebrities,\n      sport,\n      social_media,\n      international,\n      tech_inno,\n      health\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/hero/Documents/projects/Next/pages/index.js"],"names":["Head","Nav","Intro","Footer","categoryReturn","filterCat","fetch","useSWR","Link","Loader","fetcher","url","r","json","Post","props","post","image_link","category","caption","Abstract","getServerSideProps","data","Index","initialData","intro","posts","business","headings","abstract_cat","map","_id","politics","celebrities","sport","social_media","international","tech_inno","health","latest_news","top_news","display"],"mappings":"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","sourcesContent":["import Head from '../components/head'\r\nimport Nav from '../components/nav'\r\nimport Intro from '../components/Intro'\r\nimport Footer from '../components/Footer'\r\nimport {categoryReturn, filterCat} from '../lib/posts'\r\nimport fetch from 'node-fetch'\r\nimport useSWR from 'swr'\r\nimport Link from 'next/link'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\nconst fetcher =async (url)=>{const r = await fetch(url)\r\nreturn r.json()}\r\nconst Post =(props)=>{\r\nconst {post} = props;\r\nreturn(                  \r\n    <div className=\"col-lg-4 col-md-6 col-sm-6\">\r\n        <div className=\"news-container \">\r\n            {\r\n            post.image_link !== null ?\r\n            <Link href='/news/[cat]/[title]' as ={`/news/${post.category}/${post.caption}`}>\r\n              <a className=\"news-items\" >\r\n                <img src={post.image_link} className=\"img-fluid sub-inner-img\" />\r\n              </a>\r\n            </Link>\r\n            \r\n            :\r\n            <Link href='/news/[cat]/[title]' as ={`/news/${post.category}/${post.caption}`}>\r\n              <a className=\"news-items\">\r\n                <img src={post.image_link}  className=\"img-fluid sub-inner-img\"/>\r\n              </a>\r\n            </Link>\r\n            \r\n            }\r\n            <Link href='/news/[cat]/[title]' as={`/news/${post.category}/${post.caption}`}>\r\n              <a className=\"news-items\" >{post.caption}\r\n              </a> \r\n            </Link>\r\n            \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Abstract =(props)=>{\r\n    const {post} = props;\r\n    return(                  \r\n        <div className=\"col-md-12 col-sm-12\">\r\n            <div className=\"news-container news-tablet-container\">\r\n                {\r\n                post.image_link !== null ?\r\n                <Link href='/news/[cat]/[title]' as ={`/news/${post.category}/${post.caption}`}>\r\n                  <a className=\"news-items\">\r\n                    <img src={post.image_link}  className=\"img-fluid sub-inner-img\"/>\r\n                  </a>\r\n                </Link>\r\n                :\r\n                <Link href='/news/[cat]/[title]' as ={`/news/${post.category}/${post.caption}`}>\r\n                  <a className=\"news-items\">\r\n                    <img src={post.image_link}  className=\"img-fluid sub-inner-img\"/>\r\n                  </a>\r\n                </Link>\r\n                }\r\n              <Link href='/news/[cat]/[title]' as={`/news/${post.category}/${post.caption}`}>\r\n                <a className=\"news-items\" >{post.caption}\r\n                </a> \r\n              </Link>  \r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport async function getServerSideProps() {\r\n    //console.log(`${process.env.HOST}/api/posts`)\r\n    const data = await fetcher(`http://localhost:3000/api/posts`)\r\n    return { props: { data } }\r\n  }\r\n \r\nfunction Index (props) {\r\n    const initialData = props.data\r\n   const { data } = useSWR(`http://localhost:3000/api/posts`, fetcher, { initialData })\r\n   const intro = categoryReturn(data.posts, 'intro', 1, 'abstract_cat')[0]\r\n   const business = filterCat(data.posts, {category:'business', headings:'not', abstract_cat:''}).map((post)=><Post key={post._id} post={post}/>)\r\n   const politics = filterCat(data.posts, {category:'politics', headings:'not', abstract_cat:''}).map((post)=><Post key={post._id} post={post}/>)\r\n   const celebrities = filterCat(data.posts, {category:'celebrities', headings:'not', abstract_cat:''}).map((post)=><Post key={post._id} post={post}/>)\r\n   const sport = filterCat(data.posts, {category:'sport', headings:'not', abstract_cat:''}).map((post)=><Post key={post._id} post={post}/>)\r\n   const social_media = filterCat(data.posts, {category:'social_media', headings:'not', abstract_cat:''}).map((post)=><Post key={post._id} post={post}/>)\r\n   const international = filterCat(data.posts, {category:'international', headings:'not', abstract_cat:''}).map((post)=><Post key={post._id} post={post}/>)\r\n   const tech_inno = filterCat(data.posts, {category:'tech_inno', headings:'not', abstract_cat:''}).map((post)=><Post key={post._id} post={post}/>)\r\n   const health = filterCat(data.posts, {category:'health', headings:'not', abstract_cat:''}).map((post)=><Post key={post._id} post={post}/>)\r\n   const latest_news =  categoryReturn(data.posts, 'latest_news', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\n   const top_news =  categoryReturn(data.posts, 'top_stories', 5, 'abstract_cat').map((post)=><Abstract key={post._id} post={post}/>)\r\n    return (\r\n    <div>\r\n        <Loader/>\r\n        <div id=\"content\" style={{display:\"none\"}}>\r\n        <Head/>\r\n        <Nav/>\r\n        <Intro intro={intro} posts= {{latest_news, top_news, business, politics, celebrities, sport, social_media, international,\r\n        tech_inno, health}}/>\r\n        <Footer />\r\n    </div>\r\n    </div>\r\n    \r\n    \r\n    )\r\n  }\r\nexport default Index"]},"metadata":{},"sourceType":"module"}